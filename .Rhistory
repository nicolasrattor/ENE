if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-08-jas.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino,method = "libcurl")
}
haven::read_sav("input/data_sav/ene_2020_08.sav")
haven::read_sav("input/data_sav/ene-2020-02-efm.sav")
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-08-jas.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
haven::read_sav("input/data_sav/ene_2020_08.sav")
------------------------------------------------------------------#
# Paso 8. Corrección de bases con problemas en .csv - Deben descargarse en .sav
#-------------------------------------------------------------------------------#
# 2020-02 a 2020-08
destino <- "input/data_sav/ene_2020_02.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-02-efm.sav?sfvrsn=802abc6c_8&download=true" , destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_03.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-03-fma.sav?sfvrsn=9b37554c_11&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_04.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-04-mam.sav?sfvrsn=9b37554c_11&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_05.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-05-amj.sav?sfvrsn=9b37554c_11&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_06.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-06-mjj.sav?sfvrsn=9b37554c_11&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_07.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-07-jja.sav?sfvrsn=9b37554c_11&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_08.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-08-jas.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
}
# Segunda parte spss continuacion
data_sav_long <- list.files("input/data_sav",full.names = TRUE)
data_sav_short <- stringr::str_remove_all(list.files("input/data_sav"),".sav")
destino <- "input/data_sav/ene_2020_02.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-02-efm.sav?sfvrsn=802abc6c_8&download=true" , destfile = destino, mode = "wb")
}
# Segunda parte spss continuacion
data_sav_long <- list.files("input/data_sav",full.names = TRUE)
data_sav_short <- stringr::str_remove_all(list.files("input/data_sav"),".sav")
assign(
data_sav_short[i],
haven::read_sav(data_sav_long[i])
)
haven::read_sav(data_sav_long[i])
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-02-efm.sav?sfvrsn=8adde4b3_14&download=true" , destfile = destino, mode = "wb")
haven::read_sav(data_sav_long[i])
destino <- "input/data_sav/ene_2020_02.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-02-efm.sav?sfvrsn=8adde4b3_14&download=true" , destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_03.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-03-fma.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_04.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-04-mam.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_05.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-05-amj.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_06.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-06-mjj.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_07.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/formato-csv/ene-2020-07-jja.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_08.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-08-jas.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
}
i<-2
assign(
data_sav_short[i],
haven::read_sav(data_sav_long[i])
)
data_sav_long
haven::read_sav("input/data_sav/ene_2020_08.sav")
data_sav_long
haven::read_sav("input/data_sav/ene_2020_03.sav")
haven::read_sav("input/data_sav/ene_2020_02.sav")
haven::read_sav("input/data_sav/ene_2020_04.sav")
haven::read_sav("input/data_sav/ene_2020_05.sav")
haven::read_sav("input/data_sav/ene_2020_06.sav")
haven::read_sav("input/data_sav/ene_2020_07.sav")
haven::read_sav("input/data_sav/ene_2020_07.sav")
destino <- "input/data_sav/ene_2020_07.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-07-jja.sav?sfvrsn=41536cf3_13&download=true",destfile = destino, mode = "wb")
}
haven::read_sav("input/data_sav/ene_2020_07.sav")
# 2020-02 a 2020-08
destino <- "input/data_sav/ene_2020_02.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-02-efm.sav?sfvrsn=8adde4b3_14&download=true" , destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_03.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-03-fma.sav?sfvrsn=4515aeb9_18&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_04.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-04-mam.sav?sfvrsn=e598f538_18&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_05.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-05-amj.sav?sfvrsn=1fff738f_12&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_06.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-06-mjj.sav?sfvrsn=86a38374_11&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_07.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-07-jja.sav?sfvrsn=41536cf3_13&download=true",destfile = destino, mode = "wb")
}
destino <- "input/data_sav/ene_2020_08.sav"
if(!file.exists(destino)){
download.file("https://www.ine.cl/docs/default-source/ocupacion-y-desocupacion/bbdd/2020/spss/ene-2020-08-jas.sav?sfvrsn=8adde4b3_14&download=true",destfile = destino, mode = "wb")
}
# Segunda parte spss continuacion
data_sav_long <- list.files("input/data_sav",full.names = TRUE)
data_sav_short <- stringr::str_remove_all(list.files("input/data_sav"),".sav")
for(i in 1:7){
assign(
data_sav_short[i],
haven::read_sav(data_sav_long[i])
)
}
save(list=ls(pattern = "ene_"), file="input/data_Rdata/bases_ENE_2.Rdata")
rm(list=ls(pattern = "ene_"))
# Tercera parte
for(i in 128:length(data_csv_long)){
assign(
data_csv_short[i],
read.csv(data_csv_long[i],sep=",")
)
}
save(list=ls(pattern = "ene_"), file="input/data_Rdata/bases_ENE_3.Rdata")
rm(list=ls(pattern = "ene_"))
gc()
data_csv_long <- list.files("input/data_csv",full.names = TRUE)
data_csv_short <- stringr::str_remove_all(list.files("input/data_csv"),".csv")
# Primera parte
for(i in 1:71){
assign(
data_csv_short[i],
read.csv(data_csv_long[i],sep=",")
)
}
save(list=ls(pattern = "ene_"), file="input/data_Rdata/bases_ENE_1.Rdata")
rm(list=ls(pattern = "ene_"))
# Segunda parte csv
for(i in 72:120){
assign(
data_csv_short[i],
read.csv(data_csv_long[i],sep=",")
)
}
data_csv_long <- list.files("input/data_csv",full.names = TRUE)
data_csv_short <- stringr::str_remove_all(list.files("input/data_csv"),".csv")
# Segunda parte csv
for(i in 72:120){
assign(
data_csv_short[i],
read.csv(data_csv_long[i],sep=",")
)
}
# Segunda parte spss continuacion
data_sav_long <- list.files("input/data_sav",full.names = TRUE)
data_sav_short <- stringr::str_remove_all(list.files("input/data_sav"),".sav")
for(i in 1:7){
assign(
data_sav_short[i],
haven::read_sav(data_sav_long[i])
)
}
save(list=ls(pattern = "ene_"), file="input/data_Rdata/bases_ENE_2.Rdata")
rm(list=ls(pattern = "ene_"))
get(load('input/data_Rdata/bases_ENE_3.Rdata'))
## Crear lista con las bases
dfs <- Filter(function(x) is(x, "data.frame"), mget(ls(pattern = "ene_")))
## Crear tabla vacía
base<-ls() %>% as.data.frame()
library(tidyverse)
## Crear tabla vacía
base<-ls() %>% as.data.frame()
names(base)<-"periodo"
base<-base %>% filter(periodo!="dfs")
base<-base %>% mutate(ocupados_agro=NA)
for (i in 1:nrow(base)){
base[i,2]<-dfs[[i]] %>%
as.data.frame() %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
}
i<-1
dfs[[i]] %>%
as.data.frame()
# Tercera parte
for(i in 128:length(data_csv_long)){
assign(
data_csv_short[i],
read.csv(data_csv_long[i],sep=",")
)
}
## Cargar bases
data_csv_long <- list.files("input/data_csv",full.names = TRUE)
data_csv_short <- stringr::str_remove_all(list.files("input/data_csv"),".csv")
# Tercera parte
for(i in 128:length(data_csv_long)){
assign(
data_csv_short[i],
read.csv(data_csv_long[i],sep=",")
)
}
i<-128
assign(
data_csv_short[i],
read.csv(data_csv_long[i],sep=";")
)
# Tercera parte
for(i in 128:length(data_csv_long)){
assign(
data_csv_short[i],
read.csv(data_csv_long[i],sep=";")
)
}
save(list=ls(pattern = "ene_"), file="input/data_Rdata/bases_ENE_3.Rdata")
rm(list=ls(pattern = "ene_"))
data_csv_long <- list.files("input/data_csv",full.names = TRUE)
data_csv_short <- stringr::str_remove_all(list.files("input/data_csv"),".csv")
data_csv_short
?ifelse
i<-117
i<=118
# Segunda parte csv
for(i in 72:120){
?if
s
?if
get(load('input/data_Rdata/bases_ENE_3.Rdata'))
1+1
get(load('input/data_Rdata/bases_ENE_3.Rdata'))
## Crear lista con las bases
dfs <- Filter(function(x) is(x, "data.frame"), mget(ls(pattern = "ene_")))
## Crear tabla vacía
base<-ls() %>% as.data.frame()
names(base)<-"periodo"
base<-base %>% filter(periodo!="dfs")
base<-base %>% mutate(ocupados_agro=NA)
View(base)
## Crear tabla vacía
base<-ls(pattern = "ene_") %>% as.data.frame()
names(base)<-"periodo"
base<-base %>% filter(periodo!="dfs")
base<-base %>% mutate(ocupados_agro=NA)
View(base)
i<-1
for (i in 1:nrow(base)){
base[i,2]<-dfs[[i]] %>%
as.data.frame() %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
}
dfs[[i]] %>%
as.data.frame()
dfs[[i]] %>%
as.data.frame() %>%
filter(categoria_ocupacion>0)
dfs[[i]] %>%
as.data.frame() %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1)
dfs[[i]] %>%
as.data.frame() %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1)
dfs[[i]] %>%
as.data.frame() %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal)
dfs[[i]] %>%
as.data.frame() %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=stringr::str_replace_all(fact_cal,",","."))
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal)
dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=stringr::str_replace_all(fact_cal,",",".")) %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal)
dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=stringr::str_replace_all(fact_cal,",",".")) %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=stringr::str_replace_all(fact_cal,",",".")) %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal)
dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=as.numeric(stringr::str_replace_all(fact_cal,",","."))) %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
for (i in 1:nrow(base)){
base[i,2]<-dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=as.numeric(stringr::str_replace_all(fact_cal,",","."))) %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
}
plot(base$ocupados_agro,type = "l")
data_csv_long <- list.files("input/data_csv",full.names = TRUE)
data_csv_short <- stringr::str_remove_all(list.files("input/data_csv"),".csv")
# Segunda parte csv
for(i in 72:120){
if(i<=118){
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=","))
}
else{
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=";"))
}
}
data_csv_short
iz-119
i<-119
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=";"))
i<-90
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=";"))
data_csv_long[i]
i<-89
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=";"))
assign(data_csv_short[i],
read.csv(data_csv_long[77],sep=";"))
assign(data_csv_short[77],
read.csv(data_csv_long[77],sep=";"))
assign(data_csv_short[85],
read.csv(data_csv_long[85],sep=";"))
assign(data_csv_short[85],
read.csv(data_csv_long[85],sep=","))
# Segunda parte csv
for(i in 72:120){
if(i<88){
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=","))
}
else{
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=";"))
}
}
# Segunda parte spss continuacion
data_sav_long <- list.files("input/data_sav",full.names = TRUE)
i<-89
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=","))
i<-90
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=","))
i<-88
assign(data_csv_short[i],
read.csv(data_csv_long[i],sep=","))
# Segunda parte spss continuacion
data_sav_long <- list.files("input/data_sav",full.names = TRUE)
data_sav_short <- stringr::str_remove_all(list.files("input/data_sav"),".sav")
for(i in 1:7){
assign(
data_sav_short[i],
haven::read_sav(data_sav_long[i])
)
}
save(list=ls(pattern = "ene_"), file="input/data_Rdata/bases_ENE_2.Rdata")
## Crear lista con las bases
dfs <- Filter(function(x) is(x, "data.frame"), mget(ls(pattern = "ene_")))
## Crear tabla vacía
base<-ls(pattern = "ene_") %>% as.data.frame()
rm(list(pattern = "ene_"))
rm(list=ls(pattern = "ene_"))
names(base)<-"periodo"
base<-base %>% filter(periodo!="dfs")
base<-base %>% mutate(ocupados_agro=NA)
i<-1
dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=as.numeric(stringr::str_replace_all(fact_cal,",","."))) %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=as.numeric(stringr::str_replace_all(fact_cal,",","."))) %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
#   filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
for (i in 1:nrow(base)){
base[i,2]<-dfs[[i]] %>%
as.data.frame() %>%
mutate(fact_cal=as.numeric(stringr::str_replace_all(fact_cal,",","."))) %>%
filter(categoria_ocupacion>0) %>%
filter(b14_rev4cl_caenes==1) %>%
#   filter(ocup_form==1) %>%                      ## filtro formales, optativo
select(fact_cal) %>%
sum()
}
base
plot(base$ocupados_agro,type = "l")
base %>%
mutate(fecha=stringr::str_remove_all(periodo,"ene_"))
base %>%
mutate(fecha=stringr::str_remove_all(periodo,"ene_"),
fecha=split(fecha,"_"))
base %>%
mutate(fecha=stringr::str_remove_all(periodo,"ene_"),
fecha=lubridate::make_date(year=substr(fecha,1,4),month = substr(fecha,6,7) ,day="01"))
base %>%
mutate(fecha=stringr::str_remove_all(periodo,"ene_"),
fecha=lubridate::make_date(year=substr(fecha,1,4),
month = substr(fecha,6,7) ,day="01")) %>%
ggplot(aes(x=fecha,y=ocupados_agro))+
geom_line()+
theme_bw()+
labs(title = "Ocupados en Agricultura.") +
scale_x_date(labels = date_format("%Y-%b"),breaks='1 year' ) +
theme(legend.position = "bottom")
library(scales)
base %>%
mutate(fecha=stringr::str_remove_all(periodo,"ene_"),
fecha=lubridate::make_date(year=substr(fecha,1,4),
month = substr(fecha,6,7) ,day="01")) %>%
ggplot(aes(x=fecha,y=ocupados_agro))+
geom_line()+
theme_bw()+
labs(title = "Ocupados en Agricultura.") +
scale_x_date(labels = date_format("%Y-%b"),breaks='1 year' ) +
theme(legend.position = "bottom")
base %>%
mutate(fecha=stringr::str_remove_all(periodo,"ene_"),
fecha=lubridate::make_date(year=substr(fecha,1,4),
month = substr(fecha,6,7) ,day="01")) %>%
ggplot(aes(x=fecha,y=ocupados_agro))+
geom_line()+
theme_bw()+
labs(title = "Ocupados en Agricultura.") +
scale_x_date(labels = date_format("%Y-%b"),breaks='1 year' ) +
scale_y_continuous(labels=function(x) format(x, big.mark = ".", scientific = FALSE),
limits = c(400000,900000)) +
theme(legend.position = "bottom")
ggsave(
plot = last_plot(),
filename = "output/graficos/agro/ocupados_agricultura.png",
device = "png",
dpi = "retina",
units = "cm",
width = 20,
height = 15
)
